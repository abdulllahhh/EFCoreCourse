// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Relations;

#nullable disable

namespace Relations.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241006191900_addTagData")]
    partial class addTagData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence<int>("orderNumber")
                .StartsAt(1000L)
                .IncrementsBy(5);

            modelBuilder.Entity("Relations.Order", b =>
                {
                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ammount")
                        .HasColumnType("int");

                    b.Property<int>("orderNumber")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("Relations.Post", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TagId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TagId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = "9",
                            Content = "Content of first post",
                            Title = "First Post"
                        },
                        new
                        {
                            Id = "2",
                            Content = "Content of second post",
                            Title = "Second Post"
                        });
                });

            modelBuilder.Entity("Relations.PostTag", b =>
                {
                    b.Property<string>("tagId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("postId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("AddedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("tagId", "postId");

                    b.HasIndex("postId");

                    b.ToTable("PostTag");

                    b.HasData(
                        new
                        {
                            tagId = "25",
                            postId = "9",
                            AddedOn = new DateTime(2024, 10, 6, 22, 19, 0, 559, DateTimeKind.Local).AddTicks(7779)
                        },
                        new
                        {
                            tagId = "2",
                            postId = "9",
                            AddedOn = new DateTime(2024, 10, 6, 22, 19, 0, 559, DateTimeKind.Local).AddTicks(7837)
                        },
                        new
                        {
                            tagId = "25",
                            postId = "2",
                            AddedOn = new DateTime(2024, 10, 6, 22, 19, 0, 559, DateTimeKind.Local).AddTicks(7841)
                        });
                });

            modelBuilder.Entity("Relations.Tag", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = "25"
                        },
                        new
                        {
                            Id = "2"
                        });
                });

            modelBuilder.Entity("Relations.Post", b =>
                {
                    b.HasOne("Relations.Tag", null)
                        .WithMany("Posts")
                        .HasForeignKey("TagId");
                });

            modelBuilder.Entity("Relations.PostTag", b =>
                {
                    b.HasOne("Relations.Post", "post")
                        .WithMany("postTags")
                        .HasForeignKey("postId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Relations.Tag", "Tag")
                        .WithMany("postTags")
                        .HasForeignKey("tagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");

                    b.Navigation("post");
                });

            modelBuilder.Entity("Relations.Post", b =>
                {
                    b.Navigation("postTags");
                });

            modelBuilder.Entity("Relations.Tag", b =>
                {
                    b.Navigation("Posts");

                    b.Navigation("postTags");
                });
#pragma warning restore 612, 618
        }
    }
}
